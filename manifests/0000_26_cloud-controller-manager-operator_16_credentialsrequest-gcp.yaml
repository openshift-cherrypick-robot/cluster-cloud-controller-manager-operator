apiVersion: cloudcredential.openshift.io/v1
kind: CredentialsRequest
metadata:
  name: openshift-gcp-ccm
  namespace: openshift-cloud-credential-operator
  annotations:
    capability.openshift.io/name: CloudCredential
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
spec:
  serviceAccountNames:
  - cloud-controller-manager
  secretRef:
    name: gcp-ccm-cloud-credentials
    namespace: openshift-cloud-controller-manager
  providerSpec:
    apiVersion: cloudcredential.openshift.io/v1
    kind: GCPProviderSpec
    permissions:
    - "certificatemanager.certmaps.get"
    - "certificatemanager.certmaps.list"
    - "certificatemanager.certmaps.use"
    - "compute.acceleratorTypes.get"
    - "compute.acceleratorTypes.list"
    - "compute.addresses.create"
    - "compute.addresses.createInternal"
    - "compute.addresses.delete"
    - "compute.addresses.deleteInternal"
    - "compute.addresses.get"
    - "compute.addresses.list"
    - "compute.addresses.setLabels"
    - "compute.addresses.use"
    - "compute.addresses.useInternal"
    - "compute.autoscalers.create"
    - "compute.autoscalers.delete"
    - "compute.autoscalers.get"
    - "compute.autoscalers.list"
    - "compute.autoscalers.update"
    - "compute.backendBuckets.addSignedUrlKey"
    - "compute.backendBuckets.create"
    - "compute.backendBuckets.delete"
    - "compute.backendBuckets.deleteSignedUrlKey"
    - "compute.backendBuckets.get"
    - "compute.backendBuckets.getIamPolicy"
    - "compute.backendBuckets.list"
    - "compute.backendBuckets.setIamPolicy"
    - "compute.backendBuckets.setSecurityPolicy"
    - "compute.backendBuckets.update"
    - "compute.backendBuckets.use"
    - "compute.backendServices.addSignedUrlKey"
    - "compute.backendServices.create"
    - "compute.backendServices.delete"
    - "compute.backendServices.deleteSignedUrlKey"
    - "compute.backendServices.get"
    - "compute.backendServices.getIamPolicy"
    - "compute.backendServices.list"
    - "compute.backendServices.setIamPolicy"
    - "compute.backendServices.setSecurityPolicy"
    - "compute.backendServices.update"
    - "compute.backendServices.use"
    - "compute.disks.create"
    - "compute.disks.createSnapshot"
    - "compute.disks.delete"
    - "compute.disks.get"
    - "compute.disks.list"
    - "compute.disks.listEffectiveTags"
    - "compute.disks.listTagBindings"
    - "compute.disks.resize"
    - "compute.disks.setLabels"
    - "compute.disks.update"
    - "compute.disks.use"
    - "compute.disks.useReadOnly"
    - "compute.diskTypes.get"
    - "compute.diskTypes.list"
    - "compute.forwardingRules.create"
    - "compute.forwardingRules.delete"
    - "compute.forwardingRules.get"
    - "compute.forwardingRules.list"
    - "compute.forwardingRules.pscCreate"
    - "compute.forwardingRules.pscDelete"
    - "compute.forwardingRules.pscSetLabels"
    - "compute.forwardingRules.pscSetTarget"
    - "compute.forwardingRules.pscUpdate"
    - "compute.forwardingRules.setLabels"
    - "compute.forwardingRules.setTarget"
    - "compute.forwardingRules.update"
    - "compute.forwardingRules.use"
    - "compute.globalAddresses.create"
    - "compute.globalAddresses.createInternal"
    - "compute.globalAddresses.delete"
    - "compute.globalAddresses.deleteInternal"
    - "compute.globalAddresses.get"
    - "compute.globalAddresses.list"
    - "compute.globalAddresses.setLabels"
    - "compute.globalAddresses.use"
    - "compute.globalForwardingRules.create"
    - "compute.globalForwardingRules.delete"
    - "compute.globalForwardingRules.get"
    - "compute.globalForwardingRules.list"
    - "compute.globalForwardingRules.pscCreate"
    - "compute.globalForwardingRules.pscDelete"
    - "compute.globalForwardingRules.pscGet"
    - "compute.globalForwardingRules.pscSetLabels"
    - "compute.globalForwardingRules.pscSetTarget"
    - "compute.globalForwardingRules.pscUpdate"
    - "compute.globalForwardingRules.setLabels"
    - "compute.globalForwardingRules.setTarget"
    - "compute.globalForwardingRules.update"
    - "compute.globalNetworkEndpointGroups.attachNetworkEndpoints"
    - "compute.globalNetworkEndpointGroups.create"
    - "compute.globalNetworkEndpointGroups.delete"
    - "compute.globalNetworkEndpointGroups.detachNetworkEndpoints"
    - "compute.globalNetworkEndpointGroups.get"
    - "compute.globalNetworkEndpointGroups.list"
    - "compute.globalNetworkEndpointGroups.use"
    - "compute.globalOperations.get"
    - "compute.globalOperations.list"
    - "compute.healthChecks.create"
    - "compute.healthChecks.delete"
    - "compute.healthChecks.get"
    - "compute.healthChecks.list"
    - "compute.healthChecks.update"
    - "compute.healthChecks.use"
    - "compute.healthChecks.useReadOnly"
    - "compute.httpHealthChecks.create"
    - "compute.httpHealthChecks.delete"
    - "compute.httpHealthChecks.get"
    - "compute.httpHealthChecks.list"
    - "compute.httpHealthChecks.update"
    - "compute.httpHealthChecks.use"
    - "compute.httpHealthChecks.useReadOnly"
    - "compute.httpsHealthChecks.create"
    - "compute.httpsHealthChecks.delete"
    - "compute.httpsHealthChecks.get"
    - "compute.httpsHealthChecks.list"
    - "compute.httpsHealthChecks.update"
    - "compute.httpsHealthChecks.use"
    - "compute.httpsHealthChecks.useReadOnly"
    - "compute.images.get"
    - "compute.images.getFromFamily"
    - "compute.images.list"
    - "compute.images.listEffectiveTags"
    - "compute.images.listTagBindings"
    - "compute.images.useReadOnly"
    - "compute.instanceGroupManagers.create"
    - "compute.instanceGroupManagers.delete"
    - "compute.instanceGroupManagers.get"
    - "compute.instanceGroupManagers.list"
    - "compute.instanceGroupManagers.update"
    - "compute.instanceGroupManagers.use"
    - "compute.instanceGroups.create"
    - "compute.instanceGroups.delete"
    - "compute.instanceGroups.get"
    - "compute.instanceGroups.list"
    - "compute.instanceGroups.update"
    - "compute.instanceGroups.use"
    - "compute.instances.addAccessConfig"
    - "compute.instances.addMaintenancePolicies"
    - "compute.instances.addResourcePolicies"
    - "compute.instances.attachDisk"
    - "compute.instances.create"
    - "compute.instances.createTagBinding"
    - "compute.instances.delete"
    - "compute.instances.deleteAccessConfig"
    - "compute.instances.deleteTagBinding"
    - "compute.instances.detachDisk"
    - "compute.instances.get"
    - "compute.instances.getEffectiveFirewalls"
    - "compute.instances.getGuestAttributes"
    - "compute.instances.getIamPolicy"
    - "compute.instances.getScreenshot"
    - "compute.instances.getSerialPortOutput"
    - "compute.instances.getShieldedInstanceIdentity"
    - "compute.instances.getShieldedVmIdentity"
    - "compute.instances.list"
    - "compute.instances.listEffectiveTags"
    - "compute.instances.listReferrers"
    - "compute.instances.listTagBindings"
    - "compute.instances.osAdminLogin"
    - "compute.instances.osLogin"
    - "compute.instances.removeMaintenancePolicies"
    - "compute.instances.removeResourcePolicies"
    - "compute.instances.reset"
    - "compute.instances.resume"
    - "compute.instances.sendDiagnosticInterrupt"
    - "compute.instances.setDeletionProtection"
    - "compute.instances.setDiskAutoDelete"
    - "compute.instances.setIamPolicy"
    - "compute.instances.setLabels"
    - "compute.instances.setMachineResources"
    - "compute.instances.setMachineType"
    - "compute.instances.setMetadata"
    - "compute.instances.setMinCpuPlatform"
    - "compute.instances.setName"
    - "compute.instances.setScheduling"
    - "compute.instances.setServiceAccount"
    - "compute.instances.setShieldedInstanceIntegrityPolicy"
    - "compute.instances.setShieldedVmIntegrityPolicy"
    - "compute.instances.setTags"
    - "compute.instances.start"
    - "compute.instances.startWithEncryptionKey"
    - "compute.instances.stop"
    - "compute.instances.suspend"
    - "compute.instances.update"
    - "compute.instances.updateAccessConfig"
    - "compute.instances.updateDisplayDevice"
    - "compute.instances.updateNetworkInterface"
    - "compute.instances.updateSecurity"
    - "compute.instances.updateShieldedInstanceConfig"
    - "compute.instances.updateShieldedVmConfig"
    - "compute.instances.use"
    - "compute.instances.useReadOnly"
    - "compute.instanceTemplates.create"
    - "compute.instanceTemplates.delete"
    - "compute.instanceTemplates.get"
    - "compute.instanceTemplates.getIamPolicy"
    - "compute.instanceTemplates.list"
    - "compute.instanceTemplates.setIamPolicy"
    - "compute.instanceTemplates.useReadOnly"
    - "compute.licenses.get"
    - "compute.licenses.list"
    - "compute.machineImages.create"
    - "compute.machineImages.delete"
    - "compute.machineImages.get"
    - "compute.machineImages.getIamPolicy"
    - "compute.machineImages.list"
    - "compute.machineImages.setIamPolicy"
    - "compute.machineImages.useReadOnly"
    - "compute.machineTypes.get"
    - "compute.machineTypes.list"
    - "compute.networkEndpointGroups.attachNetworkEndpoints"
    - "compute.networkEndpointGroups.create"
    - "compute.networkEndpointGroups.delete"
    - "compute.networkEndpointGroups.detachNetworkEndpoints"
    - "compute.networkEndpointGroups.get"
    - "compute.networkEndpointGroups.getIamPolicy"
    - "compute.networkEndpointGroups.list"
    - "compute.networkEndpointGroups.setIamPolicy"
    - "compute.networkEndpointGroups.use"
    - "compute.networks.get"
    - "compute.networks.list"
    - "compute.networks.use"
    - "compute.networks.useExternalIp"
    - "compute.projects.get"
    - "compute.regionBackendServices.create"
    - "compute.regionBackendServices.delete"
    - "compute.regionBackendServices.get"
    - "compute.regionBackendServices.getIamPolicy"
    - "compute.regionBackendServices.list"
    - "compute.regionBackendServices.setIamPolicy"
    - "compute.regionBackendServices.setSecurityPolicy"
    - "compute.regionBackendServices.update"
    - "compute.regionBackendServices.use"
    - "compute.regionHealthChecks.create"
    - "compute.regionHealthChecks.delete"
    - "compute.regionHealthCheckServices.create"
    - "compute.regionHealthCheckServices.delete"
    - "compute.regionHealthCheckServices.get"
    - "compute.regionHealthCheckServices.list"
    - "compute.regionHealthCheckServices.update"
    - "compute.regionHealthCheckServices.use"
    - "compute.regionHealthChecks.get"
    - "compute.regionHealthChecks.list"
    - "compute.regionHealthChecks.update"
    - "compute.regionHealthChecks.use"
    - "compute.regionHealthChecks.useReadOnly"
    - "compute.regionNetworkEndpointGroups.create"
    - "compute.regionNetworkEndpointGroups.delete"
    - "compute.regionNetworkEndpointGroups.get"
    - "compute.regionNetworkEndpointGroups.list"
    - "compute.regionNetworkEndpointGroups.use"
    - "compute.regionNotificationEndpoints.create"
    - "compute.regionNotificationEndpoints.delete"
    - "compute.regionNotificationEndpoints.get"
    - "compute.regionNotificationEndpoints.list"
    - "compute.regionNotificationEndpoints.update"
    - "compute.regionNotificationEndpoints.use"
    - "compute.regionOperations.get"
    - "compute.regionOperations.list"
    - "compute.regionSecurityPolicies.get"
    - "compute.regionSecurityPolicies.list"
    - "compute.regionSecurityPolicies.use"
    - "compute.regions.get"
    - "compute.regions.list"
    - "compute.regionSslCertificates.create"
    - "compute.regionSslCertificates.delete"
    - "compute.regionSslCertificates.get"
    - "compute.regionSslCertificates.list"
    - "compute.regionSslPolicies.create"
    - "compute.regionSslPolicies.delete"
    - "compute.regionSslPolicies.get"
    - "compute.regionSslPolicies.list"
    - "compute.regionSslPolicies.listAvailableFeatures"
    - "compute.regionSslPolicies.update"
    - "compute.regionSslPolicies.use"
    - "compute.regionTargetHttpProxies.create"
    - "compute.regionTargetHttpProxies.delete"
    - "compute.regionTargetHttpProxies.get"
    - "compute.regionTargetHttpProxies.list"
    - "compute.regionTargetHttpProxies.setUrlMap"
    - "compute.regionTargetHttpProxies.update"
    - "compute.regionTargetHttpProxies.use"
    - "compute.regionTargetHttpsProxies.create"
    - "compute.regionTargetHttpsProxies.delete"
    - "compute.regionTargetHttpsProxies.get"
    - "compute.regionTargetHttpsProxies.list"
    - "compute.regionTargetHttpsProxies.setSslCertificates"
    - "compute.regionTargetHttpsProxies.setUrlMap"
    - "compute.regionTargetHttpsProxies.update"
    - "compute.regionTargetHttpsProxies.use"
    - "compute.regionTargetTcpProxies.create"
    - "compute.regionTargetTcpProxies.delete"
    - "compute.regionTargetTcpProxies.get"
    - "compute.regionTargetTcpProxies.list"
    - "compute.regionTargetTcpProxies.use"
    - "compute.regionUrlMaps.create"
    - "compute.regionUrlMaps.delete"
    - "compute.regionUrlMaps.get"
    - "compute.regionUrlMaps.invalidateCache"
    - "compute.regionUrlMaps.list"
    - "compute.regionUrlMaps.update"
    - "compute.regionUrlMaps.use"
    - "compute.regionUrlMaps.validate"
    - "compute.reservations.get"
    - "compute.reservations.list"
    - "compute.securityPolicies.get"
    - "compute.securityPolicies.list"
    - "compute.securityPolicies.use"
    - "compute.snapshots.listEffectiveTags"
    - "compute.snapshots.listTagBindings"
    - "compute.sslCertificates.create"
    - "compute.sslCertificates.delete"
    - "compute.sslCertificates.get"
    - "compute.sslCertificates.list"
    - "compute.sslPolicies.create"
    - "compute.sslPolicies.delete"
    - "compute.sslPolicies.get"
    - "compute.sslPolicies.list"
    - "compute.sslPolicies.listAvailableFeatures"
    - "compute.sslPolicies.update"
    - "compute.sslPolicies.use"
    - "compute.subnetworks.get"
    - "compute.subnetworks.list"
    - "compute.subnetworks.use"
    - "compute.subnetworks.useExternalIp"
    - "compute.targetGrpcProxies.create"
    - "compute.targetGrpcProxies.delete"
    - "compute.targetGrpcProxies.get"
    - "compute.targetGrpcProxies.list"
    - "compute.targetGrpcProxies.update"
    - "compute.targetGrpcProxies.use"
    - "compute.targetHttpProxies.create"
    - "compute.targetHttpProxies.delete"
    - "compute.targetHttpProxies.get"
    - "compute.targetHttpProxies.list"
    - "compute.targetHttpProxies.setUrlMap"
    - "compute.targetHttpProxies.update"
    - "compute.targetHttpProxies.use"
    - "compute.targetHttpsProxies.create"
    - "compute.targetHttpsProxies.delete"
    - "compute.targetHttpsProxies.get"
    - "compute.targetHttpsProxies.list"
    - "compute.targetHttpsProxies.setCertificateMap"
    - "compute.targetHttpsProxies.setQuicOverride"
    - "compute.targetHttpsProxies.setSslCertificates"
    - "compute.targetHttpsProxies.setSslPolicy"
    - "compute.targetHttpsProxies.setUrlMap"
    - "compute.targetHttpsProxies.update"
    - "compute.targetHttpsProxies.use"
    - "compute.targetInstances.create"
    - "compute.targetInstances.delete"
    - "compute.targetInstances.get"
    - "compute.targetInstances.list"
    - "compute.targetInstances.use"
    - "compute.targetPools.addHealthCheck"
    - "compute.targetPools.addInstance"
    - "compute.targetPools.create"
    - "compute.targetPools.delete"
    - "compute.targetPools.get"
    - "compute.targetPools.list"
    - "compute.targetPools.removeHealthCheck"
    - "compute.targetPools.removeInstance"
    - "compute.targetPools.update"
    - "compute.targetPools.use"
    - "compute.targetSslProxies.create"
    - "compute.targetSslProxies.delete"
    - "compute.targetSslProxies.get"
    - "compute.targetSslProxies.list"
    - "compute.targetSslProxies.setBackendService"
    - "compute.targetSslProxies.setCertificateMap"
    - "compute.targetSslProxies.setProxyHeader"
    - "compute.targetSslProxies.setSslCertificates"
    - "compute.targetSslProxies.setSslPolicy"
    - "compute.targetSslProxies.update"
    - "compute.targetSslProxies.use"
    - "compute.targetTcpProxies.create"
    - "compute.targetTcpProxies.delete"
    - "compute.targetTcpProxies.get"
    - "compute.targetTcpProxies.list"
    - "compute.targetTcpProxies.update"
    - "compute.targetTcpProxies.use"
    - "compute.urlMaps.create"
    - "compute.urlMaps.delete"
    - "compute.urlMaps.get"
    - "compute.urlMaps.invalidateCache"
    - "compute.urlMaps.list"
    - "compute.urlMaps.update"
    - "compute.urlMaps.use"
    - "compute.urlMaps.validate"
    - "compute.zoneOperations.get"
    - "compute.zoneOperations.list"
    - "compute.zones.get"
    - "compute.zones.list"
    - "iam.serviceAccounts.actAs"
    - "iam.serviceAccounts.get"
    - "iam.serviceAccounts.list"
    - "networksecurity.clientTlsPolicies.get"
    - "networksecurity.clientTlsPolicies.list"
    - "networksecurity.clientTlsPolicies.use"
    - "networksecurity.serverTlsPolicies.get"
    - "networksecurity.serverTlsPolicies.list"
    - "networksecurity.serverTlsPolicies.use"
    - "resourcemanager.projects.get"
    - "resourcemanager.projects.list"
    - "serviceusage.quotas.get"
    - "serviceusage.services.get"
    - "serviceusage.services.list"
    # If set to true, don't check whether the requested
    # roles have the necessary services enabled
    skipServiceCheck: true
